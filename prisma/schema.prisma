// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
provider = "mysql"
url = env("DATABASE_URL")
}
generator client {
provider = "prisma-client-js"
}

model User {
  id    Int    @id @default(autoincrement())
  status String @default("active")
  firstName String?
  lastName String?
  password String?
  username String  @unique
  email String @unique
  phoneNumber Int? 
  createdAt DateTime @default(now()) 
  updatedAt DateTime @default(now())
  attachments Attachment[]
  role Role @relation(fields: [roleId], references: [id])
  roleId Int
}

model Attachment {
  id     Int  @id @default(autoincrement())
  status String @default("active")
  createdAt DateTime @default(now()) 
  updatedAt DateTime @default(now())
  user   User @relation(fields: [userId], references: [id])
  userId Int // relation scalar field  (used in the `@relation` attribute above)
  tutor Tutor? @relation(fields: [tutorId], references: [id])
  tutorId Int?
  student Student? @relation(fields: [studentId], references: [id])
  studentId Int?
  title String 
  file String 
}
model Role {
  id Int @id @default(autoincrement())
  status String @default("active")
  createdAt DateTime @default(now()) 
  updatedAt DateTime @default(now())
  name String @unique 
  users User[] 
  actions Action[]

}
model Action {
  id Int  @id @default(autoincrement())
  status String @default("active")
  createdAt DateTime @default(now()) 
  updatedAt DateTime @default(now())
  name String @unique
  desc String @unique 
  role Role? @relation(fields: [roleId], references:[id])
  roleId Int?
}

model Tutor {
  id Int @id @default(autoincrement())
  status String @default("active")
  createdAt DateTime @default(now()) 
  updatedAt DateTime @default(now())
  firstName String
  lastName String 
  phoneNumber Int? 
  adress String?
  attachments Attachment[]
  students Student[]
  
}

model Business {
id Int @id @default(autoincrement())
status String @default("active")
createdAt DateTime @default(now()) 
updatedAt DateTime @default(now())
name String @unique 
desc String?
phoneNumber Int 
adress String?
email String 
website String?
students Student[]
}

model Student {
  id    Int    @id @default(autoincrement())
  status String @default("active")
  firstName String?
  lastName String?
  password String?
  email String @unique
  phoneNumber Int? 
  createdAt DateTime @default(now()) 
  updatedAt DateTime @default(now())
  tutor Tutor? @relation(fields: [tutorId], references: [id])
  tutorId Int?
  business Business? @relation(fields: [businessId], references: [id])
  businessId Int?
  attachments Attachment[]

}

model Agenda {
  id Int @id @default(autoincrement())
  status String @default("active")
  createdAt DateTime @default(now()) 
  updatedAt DateTime @default(now())
  startAt DateTime @default(now())
  endAt DateTime @default(now())

}